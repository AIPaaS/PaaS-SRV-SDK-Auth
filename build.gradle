apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'war'

compileJava.dependsOn clean

sourceCompatibility = 1.7

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

repositories {
    maven{ url "http://10.1.228.199:18081/nexus/content/groups/public/"  }
}

sourceSets {
    main {
        java { srcDirs = ['src/main/java']}
        resources {
            srcDirs = ['src/main/resources']
        }
    }
}

ext {
	moduleName="ipaas-auth-dubbointerface";
	moduleVersion="0.1-SNAPSHOT"
	publishUserName = "devadm"
	publishUserPassword = "Devadm@1212"
	publishURL="http://10.1.228.199:18081/nexus/content/repositories/snapshots/"
	
	builtBy="gradle 2.1" 
} 

group = 'com.ai'

dependencies{
	compile 'com.ai:ipaas-common:0.1-SNAPSHOT'
	compile ('com.ai:ipaas-base:0.1-SNAPSHOT'){
		exclude group: 'org.apache.tomcat.embed'
	}
	compile "org.springframework:spring-web:4.1.6.RELEASE"
	compile "org.springframework:spring-webmvc:4.1.6.RELEASE"
	testCompile(  
                "org.springframework:spring-test:4.1.6.RELEASE",  
                "junit:junit:4.11"  
        )  
}


jar {
    baseName moduleName
    version moduleVersion
    exclude "*.xml"
    exclude "mybatis/**"
	manifest {
        attributes 'packageName': moduleName, 'Built-By': builtBy,'create-date': new Date().format('yyyy-MM-dd HH:mm:ss')
    }
}

task publishJar(type:Jar){
    version moduleVersion
    baseName moduleName
    from sourceSets.main.output
    destinationDir file("$buildDir/libs")
    include "com/ai/paas/ipaas/config/dubbo/common/**"
    include "com/ai/paas/ipaas/config/dubbo/interfaces/**"
    include "com/ai/paas/ipaas/config/dubbo/vo/**"
    manifest {
        attributes 'packageName': moduleName, 'Built-By': builtBy,'Built-date': new Date().format('yyyy-MM-dd HH:mm:ss'),'Manifest-Version':version
    }
}
publish.dependsOn build

publishing {
    publications {
        publishing.publications.create("${moduleName}", MavenPublication) {
            groupId group
            artifactId moduleName
            version moduleVersion
            artifact  publishJar
        }
    }
    repositories {
        maven {
            url  publishURL
            credentials {
                username = publishUserName
                password = publishUserPassword
            }
        }
    }
}

task copyDeps(type: Copy) {
    from(project.configurations.runtime)
    into project.file('build/3rd-libs')
}

task copyConfigFiles(type: Copy){
    from fileTree(dir:'src/main/resources')
    destinationDir file("build/all-config")
}

war {
    baseName = "iPaas-Auth"
}

build.dependsOn copyDeps,copyConfigFiles